@page "/aotfilters"
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons

<DataGrid @ref="BaseGrid" PageSize="25"
          URL="api/aotfilter/GetFilters"
          doubleClick="@((RecordDoubleClickEventArgs<AOTFilterViewModel> ev) => { RecordDoubleClickHandler(ev); })"
          ToolbarClickHandler="@ToolbarClickHandler"
          ToolbarItems="@ToolbarItems">
    <Columns>
        <GridColumns>
            <GridColumn Field="@nameof(AOTFilterViewModel.Name)" HeaderText="Name" TextAlign="TextAlign.Center" Width="100"></GridColumn>
            <GridColumn Field="@nameof(AOTFilterViewModel.IntensityValue)" HeaderText="Intensity Value" TextAlign="TextAlign.Center" Width="100"></GridColumn>
            <GridColumn Field="@nameof(AOTFilterViewModel.DescriptionFORM)" HeaderText="Description" TextAlign="TextAlign.Center" Width="150"></GridColumn>
        </GridColumns>
    </Columns>
</DataGrid>

@code
{

    DataGrid<AOTFilterViewModel> BaseGrid;
    public List<object> ToolbarItems;
    protected override async Task OnInitializedAsync()
    {

        ToolbarItems = new List<object> {
            new ItemModel() { Text = "Add", TooltipText = "Add", PrefixIcon = "e-add", Id = "Add" },
            new ItemModel() { Text = "Refresh", TooltipText = "Refresh", PrefixIcon = "e-refresh", Id = "Refresh" }
                                                        };


    }

    private void RecordDoubleClickHandler(RecordDoubleClickEventArgs<AOTFilterViewModel>
    args)
    {
        var id = args.RowData.Id;
        if (id > 0)
            nM.NavigateTo("filter/" + id);
    }
    private void ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Refresh")
        {
            BaseGrid.Refresh();
        }
        if (args.Item.Id == "Add")
        {
            nM.NavigateTo("/filter");
        }
    }
    private void onChange(CallBackObj obj)
    {
        this.BaseGrid.FilterByColumn(obj.FieldName, "equal", obj.FieldValue);
    }
}
